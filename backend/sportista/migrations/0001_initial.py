# Generated by Django 4.2.1 on 2023-06-18 20:36

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('city', models.CharField(max_length=255)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_user', models.BooleanField(default=False)),
                ('is_renter', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='field_name', max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('details', models.CharField(max_length=1000)),
                ('images', models.TextField(null=True)),
                ('starts', models.TimeField()),
                ('ends', models.TimeField()),
                ('lock', models.BooleanField(default=False)),
                ('image', models.TextField(null=True)),
                ('price', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(null=True)),
                ('last_name', models.TextField(null=True)),
                ('subject', models.TextField(null=True)),
                ('text', models.TextField(null=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Renter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(max_length=255)),
                ('id_logina', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='renterts_loged_in_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SportistaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('gender', models.BooleanField()),
                ('date_of_birth', models.DateField()),
                ('monday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('monday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('tuesday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('tuesday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('wednesday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('wednesday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('thursday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('thursday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('friday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('friday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('saturday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('saturday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('sunday_start', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('sunday_end', models.TimeField(default=datetime.time(0, 0), null=True)),
                ('favourite_fields', models.ManyToManyField(blank=True, related_name='users_favourite_set', to='sportista.field')),
                ('id_logina', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_loged_in_account', to=settings.AUTH_USER_MODEL)),
                ('plays_sports', models.ManyToManyField(to='sportista.sport')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('id_leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_leader_set', to='sportista.sportistauser')),
                ('users', models.ManyToManyField(blank=True, related_name='teams_users_set', to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserRatesUSer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(null=True)),
                ('id_graders', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grader', to='sportista.sportistauser')),
                ('id_player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player', to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserGradesFieldTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField()),
                ('id_fielda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.field')),
                ('id_usera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserGradesField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField()),
                ('id_fielda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.field')),
                ('id_usera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserClicksFieldTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_giver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade_giver', to='sportista.sportistauser')),
                ('grade_reciver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade_reciver', to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='TeamRentsField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled', models.BooleanField(default=False)),
                ('played', models.BooleanField(default=False)),
                ('beginning', models.DateTimeField()),
                ('ending', models.DateTimeField()),
                ('price', models.IntegerField(default=0, null=True)),
                ('id_fielda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.field')),
                ('id_teama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reciver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_reciver', to='sportista.sportistauser')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_sender', to='sportista.sportistauser')),
            ],
        ),
        migrations.CreateModel(
            name='RenterRatesUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('id_renter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.renter')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.sportistauser')),
            ],
        ),
        migrations.AddField(
            model_name='renter',
            name='rates_user',
            field=models.ManyToManyField(blank=True, through='sportista.RenterRatesUser', to='sportista.sportistauser'),
        ),
        migrations.CreateModel(
            name='PlayInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True)),
                ('start', models.DateTimeField(null=True)),
                ('ends', models.DateTimeField(null=True)),
                ('accepted', models.BooleanField(default=False, null=True)),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Id_field', to='sportista.field')),
                ('invite_reciver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_invite_reciver', to='sportista.sportistauser')),
                ('invite_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_invite_sender', to='sportista.sportistauser')),
                ('sport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_sport', to='sportista.sport')),
            ],
        ),
        migrations.AddField(
            model_name='field',
            name='has_teams',
            field=models.ManyToManyField(blank=True, through='sportista.TeamRentsField', to='sportista.team'),
        ),
        migrations.AddField(
            model_name='field',
            name='id_rentera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.renter'),
        ),
        migrations.AddField(
            model_name='field',
            name='is_sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportista.sport'),
        ),
    ]
